/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.37
 * Generated at: 2020-12-01 22:25:56 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import java.util.*;

public final class search_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!--Jiaxiang Guo-->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

String username=request.getParameter("username3");
String category=request.getParameter("category");
String ingredient=request.getParameter("ingredient");
int cate = Integer.parseInt(category);
String recipeid;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\"> \r\n");
      out.write("<head>\r\n");
      out.write("\r\n");
      out.write("<!-- Basic Page Needs\r\n");
      out.write("================================================== -->\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<title>Daily Recipe</title>\r\n");
      out.write("\r\n");
      out.write("<!-- Mobile Specific Metas\r\n");
      out.write("================================================== -->\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\">\r\n");
      out.write("\r\n");
      out.write("<!-- CSS\r\n");
      out.write("================================================== -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/style.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/colors/green.css\" id=\"colors\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("<!-- Wrapper -->\r\n");
      out.write("<div id=\"wrapper\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- Header\r\n");
      out.write("================================================== -->\r\n");
      out.write("<header id=\"header\">\r\n");
      out.write("\r\n");
      out.write("<!-- Container -->\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"thirteen columns navigation\">\r\n");
      out.write("\r\n");
      out.write("\t<nav id=\"navigation\" class=\"menu nav-collapse\">\r\n");
      out.write("\t\t<ul>\r\n");
      out.write("\t\t\t<li><a href=\"index.jsp?username=");
      out.print(username );
      out.write("\" id=\"current\">Home </a></li>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t<li><a href=\"#\">Recipes</a>\r\n");
      out.write("\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t<li><a href=\"browse-recipes.jsp?username=");
      out.print(username );
      out.write("\">Browse Recipes</a></li>\r\n");
      out.write("\t\t\t\t</ul>\r\n");
      out.write("\t\t\t</li>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t<li><a href=\"submit-recipe.jsp?username=");
      out.print(username );
      out.write("\">Submit Recipe</a></li>\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t<!-- add userName===================================== -->\r\n");
      out.write("\t\t\t<li><a href=\"#\">");
      out.print( username );
      out.write("</a>\r\n");
      out.write("\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t<li><a href=\"profile.jsp?username=");
      out.print(username );
      out.write("\">View Profile</a></li>\r\n");
      out.write("\t\t\t\t\t<li><a href=\"login.html\">Sign out</a></li>\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t</ul>\r\n");
      out.write("\t\t\t</li>\r\n");
      out.write("\t\t</ul>\r\n");
      out.write("\t</nav>\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("<!-- Container / End -->\r\n");
      out.write("</header>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- Content\r\n");
      out.write("================================================== -->\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("\r\n");
      out.write("\t<!-- Masonry -->\r\n");
      out.write("\t<div class=\"twelve columns\">\r\n");
      out.write("\r\n");
      out.write("\t\t<!-- Headline -->\r\n");
      out.write(" \t\t<h3 class=\"headline\">Daily Recipes</h3>\r\n");
      out.write("\t\t<span class=\"line rb margin-bottom-35\"></span>\r\n");
      out.write("\t\t<div class=\"clearfix\"></div>\r\n");
      out.write("\r\n");
      out.write("\t\t<!-- Isotope -->\r\n");
      out.write("\t\t<div class=\"isotope\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t<h2 align=\"center\"><font><strong>Chef Menu</strong></font></h2>\r\n");
      out.write("<style>\r\n");
      out.write("table, th, td {\r\n");
      out.write("  border: 1px solid black;\r\n");
      out.write("  border-collapse: collapse;\r\n");
      out.write("}\r\n");
      out.write("th, td {\r\n");
      out.write("  padding: 15px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<table align=\"center\" cellpadding=\"5\" cellspacing=\"5\" border=\"1\" style=\"width:100%\">\r\n");
      out.write("<tr>\r\n");
      out.write("\r\n");
      out.write("</tr>\r\n");
      out.write("<tr bgcolor=\"#A52A2A\" font color = \"white\">\r\n");
      out.write("<td><b><font color=\"white\">Title</font></b></td>\r\n");
      out.write("<td><b><font color=\"white\">Chef</font></b></td>\r\n");
      out.write("<td><b><font color=\"white\">Date</font></b></td>\r\n");
      out.write("</tr>\r\n");

try{ 
Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/recipe", "root", "root");
Statement st=conn.createStatement();
String sql ="SELECT recipes.recipe_id,recipes.title,createdby.username,createdby.date FROM recipes,createdby where recipes.recipe_id = createdby.recipe_id Order by createdby.date DESC";
if(cate != 0){
	sql = "SELECT * From (SELECT recipes.recipe_id,recipes.title,createdby.username,createdby.date FROM recipes,createdby where recipes.recipe_id = createdby.recipe_id Order by createdby.date DESC) AS a, inside Where inside.category_id = "+cate+" and a.recipe_id = inside.recipe_id";
}
if(ingredient != null){
	sql = "SELECT * From (SELECT recipes.recipe_id,recipes.title,createdby.username,createdby.date FROM recipes,createdby where recipes.recipe_id = createdby.recipe_id Order by createdby.date DESC) AS a, include Where include.ingredient_id = (SELECT ingredient_id FROM ingredients where name = '"+ingredient+"') and a.recipe_id = include.recipe_id";
}
if(ingredient != null && cate != 0){
	sql = "SELECT * From (SELECT recipes.recipe_id,recipes.title,createdby.username,createdby.date FROM recipes,createdby where recipes.recipe_id = createdby.recipe_id Order by createdby.date DESC) AS a, include,inside Where include.ingredient_id = (SELECT ingredient_id FROM ingredients where name = '"+ingredient+"') and a.recipe_id = include.recipe_id and a.recipe_id = inside.recipe_id and category_id = "+cate+"";
}
ResultSet resultSet = st.executeQuery(sql);

while(resultSet.next()){

      out.write("\r\n");
      out.write("<tr bgcolor=\"#DEB887\">\r\n");
      out.write("<td><a href=\"recipe.jsp?username=");
      out.print(username);
      out.write("&recipeid=");
      out.print(resultSet.getString("recipe_id") );
      out.write("\"><font color=\"blue\">");
      out.print(resultSet.getString("title") );
      out.write("</font></a></td>\r\n");
      out.write("<td><font color=\"purple\">");
      out.print(resultSet.getString("username") );
      out.write("</font></td>\r\n");
      out.write("<td><font color=\"green\">");
      out.print(resultSet.getString("date") );
      out.write("</font></td>\r\n");
      out.write("\r\n");
      out.write("</tr>\r\n");
      out.write("\r\n");
 

}

} catch (Exception e) {
e.printStackTrace();
}

      out.write("\r\n");
      out.write("</table>\r\n");
      out.write("\t\t\t\r\n");
      out.write("<br><br><br>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("<script src=\"js/login.js\"></script>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
